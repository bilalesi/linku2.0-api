scalar Date

type Query {
  getGroups(name: String, page: Float): [Group!]!
  getGroup(nrc: String!) : Group
  getSubjects(name: String, page: Float): Subjects
  getSubjectsGroups(subjectsIds: [ID!]!, page: Float) : Groups
}

type Mutation {
  updateDatabase: Boolean!
}

type Group {
  id: ID!
  nrc: String!
  group: String!
  subject: Subject!
  professors: [Professor!]!
  schedule: [Schedule!]!
  quota: Quota!
}

type Subject {
  id: ID!
  name: String!
  departmentName: String!
  code: String!
  number: String!
  mat: String!
}

type Professor {
  firstname: String!
  lastname: String!
}

type Schedule {
  startDate: String!
  endDate: String!
  time: Time!
  place: String!
  day: String!
}

type Time {
  start: String!
  end: String!
}

type Quota {
  taken: Float!
  free: Float!
}

type Subjects {
  docs: [Subject!]!
  pageInfo: PageInfo!
}

type Groups {
  docs: [Group!]!
  pageInfo: PageInfo!
}

type PageInfo {
  totalPages: Float!
  limit: Float!
  nextPage: Float
  prevPage: Float
}